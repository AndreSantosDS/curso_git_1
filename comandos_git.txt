git init serve para inicializar um novo repositório Git em um diretório. Ele cria uma pasta oculta chamada .git que permite ao Git começar a rastrear versões dos arquivos naquele projeto.


git status serve para mostrar o estado atual do repositório.
Ele informa:
Quais arquivos foram modificados.
Quais arquivos ainda não foram adicionados ao staging (git add).
Quais arquivos estão prontos para serem commitados.
Se você está em uma branch e qual é ela.
Se há commits pendentes para enviar (push) ou receber (pull).


git add . serve para adicionar todas as mudanças feitas nos arquivos do projeto ao stage (área de preparação) do Git.
Ou seja, ele prepara todos os arquivos modificados, criados ou deletados para serem incluídos no próximo commit.


git commit -m "mensagem" serve para salvar as alterações feitas no seu projeto com uma mensagem descritiva.
Explicando por partes:
git commit: registra (salva) as mudanças que você adicionou com git add.
-m "mensagem": permite escrever uma mensagem explicando o que foi feito naquela alteração (por exemplo: "corrige bug no login").
Também é possível comitar um arquivo por vez -> git commit 1_primeiro_repo/a.txt  -m "Estou enviando o arquivo de texto"

git branch -M main serve para renomear a branch atual para "main", forçando a mudança mesmo que já exista uma branch com esse nome.
Resumo:
-M = "mover" (rename) forçando a substituição, se necessário.
main = novo nome da branch.


git push -u origin main  serve para enviar (push) a branch main do seu repositório local para o repositório remoto chamado origin, e ao mesmo tempo configurar a branch main local para rastrear (-u = --set-upstream) a branch main remota.
Isso significa que, depois desse comando, você pode usar só git push ou git pull sem precisar especificar o origin main toda vez.


git pull serve para atualizar seu repositório local com as últimas mudanças do repositório remoto.
Ele faz duas coisas de uma vez:
git fetch → Baixa as atualizações do repositório remoto.
git merge → Junta essas atualizações com a sua branch atual.
Exemplo prático:
Se outra pessoa fez alterações e enviou para o GitHub, você usa git pull para trazer essas alterações para o seu computador.


git clone é um comando usado para copiar um repositório remoto para sua máquina local.
O que ele faz:
Baixa todos os arquivos do projeto.
Copia o histórico completo de commits.
Já configura o repositório remoto (geralmente chamado de origin).


git rm é usado para remover arquivos do seu repositório Git.
Ele faz duas coisas ao mesmo tempo:
Remove o arquivo do seu diretório local (do sistema de arquivos).
Marca o arquivo para remoção no próximo commit, ou seja, o Git entende que esse arquivo deve ser apagado do histórico do repositório.
Depois que for feito o commit e o push o arquivo também vai ser removido do github.


git log serve para exibir o histórico de commits de um repositório Git.
Ele mostra uma lista com informações dos commits feitos, incluindo:
Hash (ID) do commit (código único)
Autor do commit
Data e hora
Mensagem do commit